name: Release NPM (latest)

on:
  push:
    branches: [main]

permissions:
  contents: write

jobs:
  publish-npm:
    name: Publish NPM module
    runs-on: ubuntu-latest
    environment: Release
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '23'
          cache: 'npm'
          cache-dependency-path: package-lock.json
      - run: npm install-test

      - name: Fetch current version from npm with tag 'latest'
        id: npm_version
        run: |
          version=$(npm show @dev-blinq/cucumber-js@latest version)
          echo "version=$version" >> $GITHUB_ENV

      - name: Increment version
        id: increment-version
        run: |
          current_version=${{ env.version }}
          IFS='.' read -r -a version_parts <<< "$current_version"
          patch_version=$((version_parts[2]+1))
          NEW_VERSION="${version_parts[0]}.${version_parts[1]}.${patch_version}"

          echo "new_version=$NEW_VERSION" >> $GITHUB_ENV

      - name: Update package.json with new npm version
        run: |
          jq --arg new_version "${{ env.new_version }}" '.version = $new_version' "${{ github.workspace }}/package.json" > "${{ github.workspace }}/package.json.tmp" && mv "${{ github.workspace }}/package.json.tmp" "${{ github.workspace }}/package.json"

      - name: Update package-lock.json
        run: npm install --package-lock-only
        working-directory: ${{ github.workspace }}

      - uses: cucumber/action-publish-npm@v1.1.0
        with:
          npm-token: ${{ secrets.NPM_TOKEN }}
          npm-tag: 'latest'

  dispatch:
    name: Dispatch to Target Repository
    runs-on: ubuntu-latest
    needs: publish-npm
    steps:
      - name: Repository Dispatch
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.TOKEN_GITHUB }}
          repository: blinq-io/ai-qa
          event-type: trigger-cucumber-main
          client-payload: '{"ref": "${{ github.ref }}", "sha": "${{ github.sha }}"}'
